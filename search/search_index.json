{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Impresso Python","text":"<p>Impresso is a library designed to facilitate interaction with the Impresso dataset. It offers a comprehensive set of classes for API interaction and a variety of tools to streamline data manipulation and analysis.</p>"},{"location":"#installation-and-prerequisites","title":"Installation and prerequisites","text":"<p>The Impresso python library can be installed using <code>pip</code>:</p> <pre><code>pip install impresso\n</code></pre> <p>The library requires Python version <code>3.10</code> or higher. It also depends on several packages commonly found in Jupyter environments, such as <code>matplotlib</code> and <code>pandas</code>.</p>"},{"location":"#create-a-session","title":"Create a session","text":""},{"location":"#impresso.connect","title":"<code>impresso.connect(public_api_url=None, persisted_token=True)</code>","text":"<p>Connect to the Impresso API and return a client object.</p> <pre><code>from impresso import connect\n\nimpresso = connect()\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>public_api_url</code> <code>str</code> <p>The URL of the Impresso API to connect to. By default using the default URL set                   in the config file (~/.impresso_py.yml) or the Impresso default URL ({DEFAULT_API_URL}).</p> <code>None</code> <code>persisted_token</code> <code>bool</code> <p>Whether to read and write token to the user directory                     (~/.impresso_py.yml).                     This is useful to avoid having to re-enter the token each time the                     Jupiter notebook is restarted.</p> <code>True</code>"},{"location":"#about-impresso","title":"About Impresso","text":""},{"location":"#impresso-project","title":"Impresso project","text":"<p>Impresso - Media Monitoring of the Past is an interdisciplinary research project that aims to develop and consolidate tools for processing and exploring large collections of media archives across modalities, time, languages and national borders. The first project (2017-2021) was funded by the Swiss National Science Foundation under grant No. CRSII5_173719 and the second project (2023-2027) by the SNSF under grant No. CRSII5_213585 and the Luxembourg National Research Fund under grant No. 17498891.</p>"},{"location":"#copyright","title":"Copyright","text":"<p>Copyright (C) 2024 The Impresso team.</p>"},{"location":"#license","title":"License","text":"<p>This program is provided as open source under the GNU Affero General Public License v3 or later.</p>"},{"location":"preparing_queries/","title":"Preparing queries","text":"<p>Some filter parameters accept a combination of modifiers to create complex queries. For example, to search for content that mentions both <code>Titanic</code> and <code>ship</code>, you can use the <code>AND</code> modifier to combine these conditions:</p> <pre><code>from impresso import AND\n\nimpresso.search.find(term=AND(\"Titanic\", \"ship\"))\n</code></pre> <p>We can refine this condition and search for all content items that mention <code>Titanic</code> and <code>ship</code> together OR mention <code>Titanic</code> and <code>iceberg</code> together AND do not mention <code>Di Caprio</code>. </p> <pre><code>from impresso import AND, OR\n\nimpresso.search.find(\n  term=(\n    AND(\"Titanic\", \"ship\") | \n    AND(\"Titanic\", \"iceberg\")\n  ) &amp; ~OR(\"Di Caprio\")\n)\n</code></pre>"},{"location":"preparing_queries/#modifiers","title":"Modifiers","text":""},{"location":"preparing_queries/#impresso.structures.OR","title":"<code>impresso.structures.OR</code>","text":"<p>               Bases: <code>TermSet[T]</code>, <code>Generic[T]</code></p> <p>Used in filters to specify that any of the terms must be present in the result.</p> <p>Example:</p> <pre><code>OR([\"apple\", \"banana\"])\nOR(\"apple\")\nOR(\"apple\", \"banana\")\n# Negate:\n~OR(\"apple\", \"banana\")\n</code></pre>"},{"location":"preparing_queries/#impresso.structures.AND","title":"<code>impresso.structures.AND</code>","text":"<p>               Bases: <code>TermSet[T]</code>, <code>Generic[T]</code></p> <p>Used in filters to specify that all the terms must be present in the result.</p> <p>Example:</p> <pre><code>AND([\"apple\", \"banana\"])\nAND(\"apple\")\nAND(\"apple\", \"banana\")\n# Negate:\n~AND(\"apple\", \"banana\")\n</code></pre>"},{"location":"preparing_queries/#impresso.structures.DateRange","title":"<code>impresso.structures.DateRange</code>","text":"<p>Date range.</p> <p>Example:</p> <pre><code>DateRange(datetime.date(1900, 1, 1), datetime.date(2000, 12, 31))\n\n# Everything until 2000\nDateRange(None, datetime.date(2000, 12, 31))\n\n# Everything since 1900\nDateRange(datetime.date(1900, 12, 31), None)\n\n</code></pre>"},{"location":"preparing_queries/#impresso.structures.NumericRange","title":"<code>impresso.structures.NumericRange</code>","text":"<p>Date range.</p> <p>Example:</p> <pre><code>NumericRange(1, 10)\n</code></pre>"},{"location":"resources/","title":"Impresso API resources","text":""},{"location":"resources/#search","title":"Search","text":"<p>Search content items in the Impresso corpus.</p> <pre><code>impresso.search.find(term='Titanic', limit=10)\n</code></pre>"},{"location":"resources/#impresso.resources.search.SearchResource","title":"<code>impresso.resources.search.SearchResource</code>","text":"<p>               Bases: <code>Resource</code></p> <p>Search content items in the impresso database.</p>"},{"location":"resources/#impresso.resources.search.SearchResource.find","title":"<code>find(term=None, order_by=None, limit=None, offset=None, with_text_contents=False, title=None, front_page=None, entity_id=None, newspaper_id=None, date_range=None, language=None, mention=None, topic_id=None, collection_id=None, country=None, partner_id=None, text_reuse_cluster_id=None)</code>","text":"<p>Search for content items in Impresso.</p> <p>Parameters:</p> Name Type Description Default <code>term</code> <code>str | AND[str] | OR[str] | None</code> <p>Search term.</p> <code>None</code> <code>order_by</code> <code>SearchOrderByLiteral | None</code> <p>Order by aspect.</p> <code>None</code> <code>limit</code> <code>int | None</code> <p>Number of results to return.</p> <code>None</code> <code>offset</code> <code>int | None</code> <p>Number of results to skip.</p> <code>None</code> <code>with_text_contents</code> <code>bool | None</code> <p>Return only content items with text contents.</p> <code>False</code> <code>title</code> <code>str | AND[str] | OR[str] | None</code> <p>Return only content items that have this term or all/any of the terms in the title.</p> <code>None</code> <code>front_page</code> <code>bool | None</code> <p>Return only content items that were on the front page.</p> <code>None</code> <code>entity_id</code> <code>str | AND[str] | OR[str] | None</code> <p>Return only content items that mention this entity or all/any of the entities.</p> <code>None</code> <code>date_range</code> <code>DateRange | None</code> <p>Return only content items that were published in this date range.</p> <code>None</code> <code>language</code> <code>str | OR[str] | None</code> <p>Return only content items that are in this language or all/any of the languages.</p> <code>None</code> <code>mention</code> <code>str | AND[str] | OR[str] | None</code> <p>Return only content items that mention an entity with this term or all/any      of entities with the terms.</p> <code>None</code> <code>topic_id</code> <code>str | AND[str] | OR[str] | None</code> <p>Return only content items that are about this topic or all/any of the topics.</p> <code>None</code> <code>collection_id</code> <code>str | OR[str] | None</code> <p>Return only content items that are in this collection or all/any of the collections.</p> <code>None</code> <code>country</code> <code>str | OR[str] | None</code> <p>Return only content items that are from this country or all/any of the countries.</p> <code>None</code> <code>partner_id</code> <code>str | OR[str] | None</code> <p>Return only content items that are from this partner or all/any of the partners.</p> <code>None</code> <code>text_reuse_cluster_id</code> <code>str | OR[str] | None</code> <p>Return only content items that are in this text reuse cluster                    or all/any of the clusters.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>SearchDataContainer</code> <code>SearchDataContainer</code> <p>Data container with a page of results of the search.</p>"},{"location":"resources/#impresso.api_client.models.search_order_by.SearchOrderByLiteral","title":"<code>impresso.api_client.models.search_order_by.SearchOrderByLiteral = Literal['date', 'id', 'relevance', '-date', '-relevance', '-id']</code>  <code>module-attribute</code>","text":""},{"location":"resources/#impresso.resources.search.SearchDataContainer","title":"<code>impresso.resources.search.SearchDataContainer</code>","text":"<p>               Bases: <code>DataContainer</code></p> <p>Response of a search call.</p>"},{"location":"resources/#impresso.resources.search.SearchDataContainer.df","title":"<code>df: DataFrame</code>  <code>property</code>","text":"<p>Return the data as a pandas dataframe.</p>"},{"location":"resources/#entities","title":"Entities","text":"<p>Search entities in the Impresso corpus.</p> <pre><code>impresso.entities.find(term=\"Douglas Adams\")\n</code></pre>"},{"location":"resources/#impresso.resources.entities.EntitiesResource","title":"<code>impresso.resources.entities.EntitiesResource</code>","text":"<p>               Bases: <code>Resource</code></p> <p>Search entities in the Impresso database.</p>"},{"location":"resources/#impresso.resources.entities.EntitiesResource.find","title":"<code>find(term=None, wikidata_id=None, entity_id=None, entity_type=None, order_by=None, resolve=False, limit=None, offset=None)</code>","text":"<p>Search entities in Impresso.</p> <p>Parameters:</p> Name Type Description Default <code>term</code> <code>str | None</code> <p>Search term.</p> <code>None</code> <code>wikidata_id</code> <code>str | AND[str] | OR[str] | None</code> <p>Return only entities resolved to this Wikidata ID.</p> <code>None</code> <code>entity_id</code> <code>str | AND[str] | OR[str] | None</code> <p>Return only entity with this ID.</p> <code>None</code> <code>entity_type</code> <code>EntityType | AND[EntityType] | OR[EntityType] | None</code> <p>Return only entities of this type.</p> <code>None</code> <code>order_by</code> <code>FindEntitiesOrderByLiteral | None</code> <p>Field to order results by.</p> <code>None</code> <code>resolve</code> <code>bool</code> <p>Return Wikidata details of the entities, if the entity is linked to a Wikidata entry.</p> <code>False</code> <code>limit</code> <code>int | None</code> <p>Number of results to return.</p> <code>None</code> <code>offset</code> <code>int | None</code> <p>Number of results to skip.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>FindEntitiesContainer</code> <code>FindEntitiesContainer</code> <p>Data container with a page of results of the search.</p>"},{"location":"resources/#impresso.resources.entities.EntitiesResource.get","title":"<code>get(id)</code>","text":"<p>Get entity by ID.</p>"},{"location":"resources/#impresso.resources.entities.EntityType","title":"<code>impresso.resources.entities.EntityType = Literal['person', 'location']</code>  <code>module-attribute</code>","text":""},{"location":"resources/#impresso.api_client.models.find_entities_order_by.FindEntitiesOrderByLiteral","title":"<code>impresso.api_client.models.find_entities_order_by.FindEntitiesOrderByLiteral = Literal['count', 'count-mentions', 'name', 'relevance', '-relevance', '-name', '-count', '-count-mentions']</code>  <code>module-attribute</code>","text":""},{"location":"resources/#newspapers","title":"Newspapers","text":"<p>Search newspapers available in the Impresso corpus.</p> <pre><code>impresso.newspapers.find(\n    term=\"wort\",\n    order_by=\"lastIssue\",\n)\n</code></pre>"},{"location":"resources/#impresso.resources.newspapers.NewspapersResource","title":"<code>impresso.resources.newspapers.NewspapersResource</code>","text":"<p>               Bases: <code>Resource</code></p> <p>Search newspapers in the Impresso database.</p>"},{"location":"resources/#impresso.resources.newspapers.NewspapersResource.find","title":"<code>find(term=None, order_by=None, limit=None, offset=None)</code>","text":"<p>Search newspapers in Impresso.</p> <p>Parameters:</p> Name Type Description Default <code>term</code> <code>str | None</code> <p>Search term.</p> <code>None</code> <code>order_by</code> <code>FindNewspapersOrderByLiteral | None</code> <p>Field to order results by.</p> <code>None</code> <code>limit</code> <code>int | None</code> <p>Number of results to return.</p> <code>None</code> <code>offset</code> <code>int | None</code> <p>Number of results to skip.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>FindNewspapersContainer</code> <code>FindNewspapersContainer</code> <p>Data container with a page of results of the search.</p>"},{"location":"resources/#impresso.api_client.models.find_newspapers_order_by.FindNewspapersOrderByLiteral","title":"<code>impresso.api_client.models.find_newspapers_order_by.FindNewspapersOrderByLiteral = Literal['countIssues', 'endYear', 'firstIssue', 'lastIssue', 'name', 'startYear', '-name', '-countIssues', '-startYear', '-endYear', '-firstIssue', '-lastIssue']</code>  <code>module-attribute</code>","text":""},{"location":"resources/#impresso.resources.newspapers.FindNewspapersContainer","title":"<code>impresso.resources.newspapers.FindNewspapersContainer</code>","text":"<p>               Bases: <code>DataContainer</code></p> <p>Response of a search call.</p>"},{"location":"resources/#impresso.resources.newspapers.FindNewspapersContainer.df","title":"<code>df: DataFrame</code>  <code>property</code>","text":"<p>Return the data as a pandas dataframe.</p>"},{"location":"resources/#content-items","title":"Content Items","text":"<p>Get a single content item by ID.</p> <pre><code>impresso.content_items.get(\"NZZ-1794-08-09-a-i0002\")\n</code></pre>"},{"location":"resources/#collections","title":"Collections","text":"<p>Work with collections</p>"},{"location":"resources/#impresso.resources.collections.CollectionsResource","title":"<code>impresso.resources.collections.CollectionsResource</code>","text":"<p>               Bases: <code>Resource</code></p> <p>Work with collections.</p>"},{"location":"resources/#impresso.resources.collections.CollectionsResource.add_items","title":"<code>add_items(collection_id, item_ids)</code>","text":"<p>Add items to a collection by their IDs.</p> <p>NOTE: Items are not added immediately. This operation may take up to a few minutes to complete and reflect in the collection.</p> <p>Parameters:</p> Name Type Description Default <code>collection_id</code> <code>str</code> <p>ID of the collection.</p> required <code>item_ids</code> <code>list[str]</code> <p>IDs of the content items to add.</p> required"},{"location":"resources/#impresso.resources.collections.CollectionsResource.find","title":"<code>find(term=None, order_by=None, limit=None, offset=None)</code>","text":"<p>Search collections in Impresso.</p> <p>Parameters:</p> Name Type Description Default <code>term</code> <code>str | None</code> <p>Search term.</p> <code>None</code> <code>order_by</code> <code>FindCollectionsOrderByLiteral | None</code> <p>Order by aspect.</p> <code>None</code> <code>limit</code> <code>int | None</code> <p>Number of results to return.</p> <code>None</code> <code>offset</code> <code>int | None</code> <p>Number of results to skip.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>FindCollectionsContainer</code> <code>FindCollectionsContainer</code> <p>Data container with a page of results of the search.</p>"},{"location":"resources/#impresso.resources.collections.CollectionsResource.get","title":"<code>get(id)</code>","text":"<p>Get collection by ID.</p>"},{"location":"resources/#impresso.resources.collections.CollectionsResource.items","title":"<code>items(collection_id, limit=None, offset=None)</code>","text":"<p>Return all content items from a collection.</p> <p>Parameters:</p> Name Type Description Default <code>collection_id</code> <code>str</code> <p>ID of the collection.</p> required <code>limit</code> <code>int | None</code> <p>Number of results to return.</p> <code>None</code> <code>offset</code> <code>int | None</code> <p>Number of results to skip.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>SearchDataContainer</code> <code>SearchDataContainer</code> <p>Data container with a page of results of the search.</p>"},{"location":"resources/#impresso.resources.collections.CollectionsResource.remove_items","title":"<code>remove_items(collection_id, item_ids)</code>","text":"<p>Add items to a collection by their IDs.</p> <p>NOTE: Items are not removed immediately. This operation may take up to a few minutes to complete and reflect in the collection.</p> <p>Parameters:</p> Name Type Description Default <code>collection_id</code> <code>str</code> <p>ID of the collection.</p> required <code>item_ids</code> <code>list[str]</code> <p>IDs of the content items to add.</p> required"},{"location":"resources/#impresso.api_client.models.find_collections_order_by.FindCollectionsOrderByLiteral","title":"<code>impresso.api_client.models.find_collections_order_by.FindCollectionsOrderByLiteral = Literal['date', 'size', '-date', '-size']</code>  <code>module-attribute</code>","text":""},{"location":"resources/#impresso.resources.collections.FindCollectionsContainer","title":"<code>impresso.resources.collections.FindCollectionsContainer</code>","text":"<p>               Bases: <code>DataContainer</code></p> <p>Response of a find call.</p>"},{"location":"resources/#impresso.resources.collections.FindCollectionsContainer.df","title":"<code>df: DataFrame</code>  <code>property</code>","text":"<p>Return the data as a pandas dataframe.</p>"},{"location":"resources/#named-entity-recognition","title":"Named entity recognition","text":"<p>The python library contains a set of named entity recognition methods that use the same NER model used to add entities to the Impresso database.</p>"},{"location":"resources/#impresso.resources.tools.ToolsResource","title":"<code>impresso.resources.tools.ToolsResource</code>","text":"<p>               Bases: <code>Resource</code></p> <p>Various helper tools</p>"},{"location":"resources/#impresso.resources.tools.ToolsResource.nel","title":"<code>nel(text)</code>","text":"<p>Named Entity Linking</p> <p>This method requires named entities to be enclosed in tags: [START]entity[END].</p> <p>Parameters:</p> Name Type Description Default <code>text</code> <code>str</code> <p>Text to process</p> required <p>Returns:</p> Name Type Description <code>NerContainer</code> <code>NerContainer</code> <p>List of named entities</p>"},{"location":"resources/#impresso.resources.tools.ToolsResource.ner","title":"<code>ner(text)</code>","text":"<p>Named Entity Recognition</p> <p>This method is faster than <code>ner_nel</code> but does not provide any linking to external resources.</p> <p>Parameters:</p> Name Type Description Default <code>text</code> <code>str</code> <p>Text to process</p> required <p>Returns:</p> Name Type Description <code>NerContainer</code> <code>NerContainer</code> <p>List of named entities</p>"},{"location":"resources/#impresso.resources.tools.ToolsResource.ner_nel","title":"<code>ner_nel(text)</code>","text":"<p>Named Entity Recognition and Named Entity Linking</p> <p>This method is slower than <code>ner</code> but provides linking to external resources.</p> <p>Parameters:</p> Name Type Description Default <code>text</code> <code>str</code> <p>Text to process</p> required <p>Returns:</p> Name Type Description <code>NerContainer</code> <code>NerContainer</code> <p>List of named entities</p>"},{"location":"resources/#impresso.resources.tools.NerContainer","title":"<code>impresso.resources.tools.NerContainer</code>","text":"<p>               Bases: <code>DataContainer</code></p> <p>Name entity recognition result container.</p>"},{"location":"resources/#impresso.resources.tools.NerContainer.df","title":"<code>df: DataFrame</code>  <code>property</code>","text":"<p>Return the data as a pandas dataframe.</p>"},{"location":"resources/#impresso.resources.tools.NerContainer.limit","title":"<code>limit: int</code>  <code>property</code>","text":"<p>Page size.</p>"},{"location":"resources/#impresso.resources.tools.NerContainer.offset","title":"<code>offset: int</code>  <code>property</code>","text":"<p>Page offset.</p>"},{"location":"resources/#impresso.resources.tools.NerContainer.size","title":"<code>size: int</code>  <code>property</code>","text":"<p>Current page size.</p>"},{"location":"resources/#impresso.resources.tools.NerContainer.total","title":"<code>total: int</code>  <code>property</code>","text":"<p>Total number of results.</p>"},{"location":"resources/#text-reuse","title":"Text reuse","text":"<p>Two resources can be used to search text reuse clusters and passages.</p>"},{"location":"resources/#impresso.resources.text_reuse.clusters.TextReuseClustersResource","title":"<code>impresso.resources.text_reuse.clusters.TextReuseClustersResource</code>","text":"<p>               Bases: <code>Resource</code></p> <p>Text reuse clusters resource.</p>"},{"location":"resources/#impresso.resources.text_reuse.passages.TextReusePassagesResource","title":"<code>impresso.resources.text_reuse.passages.TextReusePassagesResource</code>","text":"<p>               Bases: <code>Resource</code></p> <p>Text reuse passages resource.</p>"},{"location":"result/","title":"Result object","text":"<p>When you execute a query, a <code>DataContainer</code> object is returned. This object encapsulates the query results along with metadata about the query. Additionally, it provides a suite of utility methods for accessing the results in various ways.</p> <p>In a Python notebook environment, the <code>DataContainer</code> object can render a preview of its data, facilitating quick inspection of the query results.</p>"},{"location":"result/#impresso.data_container.DataContainer","title":"<code>impresso.data_container.DataContainer</code>","text":"<p>               Bases: <code>Generic[IT, T]</code></p> <p>Generic container for responses from the Impresso API returned by resource methods (<code>get</code>, <code>find</code>). Generally represents a single page of the result.</p>"},{"location":"result/#impresso.data_container.DataContainer.df","title":"<code>df: DataFrame</code>  <code>property</code>","text":"<p>Returns the response data as a pandas dataframe.</p>"},{"location":"result/#impresso.data_container.DataContainer.limit","title":"<code>limit: int</code>  <code>property</code>","text":"<p>Current page size.</p>"},{"location":"result/#impresso.data_container.DataContainer.offset","title":"<code>offset: int</code>  <code>property</code>","text":"<p>Current page offset.</p>"},{"location":"result/#impresso.data_container.DataContainer.pydantic","title":"<code>pydantic: T</code>  <code>property</code>","text":"<p>Returns the response data as a pydantic model.</p>"},{"location":"result/#impresso.data_container.DataContainer.raw","title":"<code>raw: dict[str, Any]</code>  <code>property</code>","text":"<p>Returns the response data as a python dictionary.</p>"},{"location":"result/#impresso.data_container.DataContainer.size","title":"<code>size: int</code>  <code>property</code>","text":"<p>Current page size.</p>"},{"location":"result/#impresso.data_container.DataContainer.total","title":"<code>total: int</code>  <code>property</code>","text":"<p>Total number of results.</p>"},{"location":"result/#impresso.data_container.DataContainer.url","title":"<code>url: str | None</code>  <code>property</code>","text":"<p>URL of an Impresso web application page representing the result set from this container.</p>"}]}